#!/usr/bin/env python
# coding: utf-8

# <div style="border:solid Chocolate 2px; padding: 40px">
# 
# <b>–Æ–ª–∏—è, –ø—Ä–∏–≤–µ—Ç!üëã</b>
# 
# –ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö—É–∏–º–æ–≤, —è –±—É–¥—É —Ä–µ–≤—å—é–µ—Ä–æ–º —Ç–≤–æ–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞. –¢—ã –º–æ–∂–µ—à—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–æ –º–Ω–µ –Ω–∞ "—Ç—ã"üòè –ù–∞–¥–µ—é—Å—å, —Ç–µ–±—è —Ç–∞–∫–∂–µ –Ω–µ —Å–º—É—Ç–∏—Ç, –µ—Å–ª–∏ —è –±—É–¥—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —Ç–µ–±–µ –Ω–∞ "—Ç—ã", –Ω–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ—É–¥–æ–±–Ω–æ, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–∫–∞–∂–∏ –æ–± —ç—Ç–æ–º!
# 
# –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —É–¥–∞–ª—è–π –º–æ–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –æ–Ω–∏ –±—É–¥—É—Ç –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–Ω—ã –¥–ª—è –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã –≤ —Å–ª—É—á–∞–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞. 
# 
# –¢—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –º–æ–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å–≤–æ–∏–º–∏, –≤—ã–¥–µ–ª—è—è –∏—Ö —Ü–≤–µ—Ç–∞–º–∏ –∏ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–º—Å—è —Ç–µ–±–µ —Å–ø–æ—Å–æ–±–æ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è, –Ω–æ —è–≤–Ω–æ  –æ—Ç–ª–∏—á–∞—é—â–∏–º—Å—è –æ—Ç –º–æ–∏—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤. –≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª–∞—Å—å –ø—É—Ç–∞–Ω–∏—Ü–∞üòâ
# 
# –¢—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –º–æ–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –æ–±–æ–∑–Ω–∞—á–µ–Ω–Ω—ã–µ <font color='green'>–∑–µ–ª–µ–Ω—ã–º</font>, <font color='gold'>–∂–µ–ª—Ç—ã–º</font> –∏ <font color='red'>–∫—Ä–∞—Å–Ω—ã–º</font> —Ü–≤–µ—Ç–∞–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä:
# 
# <br/>
# 
# <div class="alert alert-success">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ <a class="tocSkip"> </h2>
# 
# <b>–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ!üëç:</b> –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–º —à–∞–≥–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º.
# </div>
# 
# <br/>
# 
# <div class="alert alert-warning">
#     <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ <a class="tocSkip"> </h2>
#     
# <b>–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏üí°:</b> –í —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ —Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–º —à–∞–≥–µ —Å—Ç–∞–Ω–µ—Ç –µ—â–µ –ª—É—á—à–µ, –µ—Å–ª–∏ –≤–Ω–µ—Å—Ç–∏ –Ω–µ–±–æ–ª—å—à–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–∏–≤—ã.
# </div>
# 
# 
# <br/>
# <div class="alert alert-block alert-danger">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ <a class="tocSkip"></h2>
# 
#     
# <b>–ù–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—Éü§î:</b>
#  –í —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ —Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–º —à–∞–≥–µ —Ç—Ä–µ–±—É–µ—Ç —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –∏ –≤–Ω–µ—Å–µ–Ω–∏—è –ø—Ä–∞–≤–æ–∫. –ù–∞–ø–æ–º–∏–Ω–∞—é, —á—Ç–æ –ø—Ä–æ–µ–∫—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏–Ω—è—Ç —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞, –µ—Å–ª–∏ —Ä–µ–≤—å—é —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—â–∏–µ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å —à–∞–≥–∏.
# </div>
#     
#     
# <br/>    
# <div class="alert alert-info">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞: <a class="tocSkip"> </h2>
# 
# <b>üëã:</b> –í —Ç–∞–∫–æ–π —Ü–≤–µ—Ç–æ–≤–æ–π —è—á–µ–π–∫–µ —è –ø—Ä–æ—à—É —Ç–µ–±—è –æ—Å—Ç–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏. –ï—Å–ª–∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—à—å –ø—Ä–æ–µ–∫—Ç –Ω–∞ –≤—Ç–æ—Ä–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –∏ –≤—ã—à–µ, –Ω–µ –∑–∞–±—ã–≤–∞–π –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–æ–º–µ—Ä –∏—Ç–µ—Ä–∞—Ü–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞ v.2".
# </div> 
# 
# <br/>    
#     
# –£–≤–∏–¥–µ–≤ —É —Ç–µ–±—è –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç—å, –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑ —è –ª–∏—à—å —É–∫–∞–∂—É –Ω–∞ –µ–µ –Ω–∞–ª–∏—á–∏–µ –∏ –¥–∞–º —Ç–µ–±–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–∞–º–æ–º—É –Ω–∞–π—Ç–∏ –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –µ–µ. –ù–∞ —Ä–µ–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ —Ç–≤–æ–π —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –±—É–¥–µ—Ç –ø–æ—Å—Ç—É–ø–∞—Ç—å —Ç–∞–∫–∂–µ, –∏ —è –ø—ã—Ç–∞—é—Å—å –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Ç–µ–±—è –∏–º–µ–Ω–Ω–æ –∫ —Ä–∞–±–æ—Ç–µ –¥–∞—Ç–∞—Å–∞–µ–Ω—Ç–∏—Å—Ç–æ–º. –ù–æ –µ—Å–ª–∏ —Ç—ã –ø–æ–∫–∞ –Ω–µ —Å–ø—Ä–∞–≤–∏—à—å—Å—è —Å —Ç–∞–∫–æ–π –∑–∞–¥–∞—á–µ–π - –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–µ —è –¥–∞–º –±–æ–ª–µ–µ —Ç–æ—á–Ω—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É!ü§ì

# # 1.[–¶–µ–ª—å](#id1)  
# # 2.[–û–ø–∏—Å–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö](#id2)  
# # 3.[–ò–∑—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö](#id3)  
# # 4.[–†–∞–∑–±–∏—Ç–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –≤—ã–±–æ—Ä–∫–∏](#id4)  
# # 5.[–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π](#id5)  
# # 6.[–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ](#id6)  
# # 7.[–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏ –Ω–∞ –∞–¥–µ–∫–≤–∞—Ç–Ω–æ—Å—Ç—å](#id7)  
# # 8.[–ß–µ–∫-–ª–∏—Å—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞](#id8)

# <a id="id1"></a>
# ## –¶–µ–ª—å
# –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–æ–¥–µ–ª—å —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±–æ–ª—å—à–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º accuracy –¥–ª—è –∑–∞–¥–∞—á–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–±–µ—Ä–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ.

# <a id="id2"></a>
# ## –û–ø–∏—Å–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
# –ö–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç –≤ –Ω–∞–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö ‚Äî —ç—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≤–µ–¥–µ–Ω–∏–∏ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –º–µ—Å—è—Ü:
# - **—Åalls** ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–æ–Ω–∫–æ–≤,
# - **minutes** ‚Äî —Å—É–º–º–∞—Ä–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–≤–æ–Ω–∫–æ–≤ –≤ –º–∏–Ω—É—Ç–∞—Ö,
# - **messages** ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ sms-—Å–æ–æ–±—â–µ–Ω–∏–π,
# - **mb_used** ‚Äî –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ç—Ä–∞—Ñ–∏–∫ –≤ –ú–±,
# - **is_ultra** ‚Äî –∫–∞–∫–∏–º —Ç–∞—Ä–∏—Ñ–æ–º –ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞ (¬´–£–ª—å—Ç—Ä–∞¬ª ‚Äî 1, ¬´–°–º–∞—Ä—Ç¬ª ‚Äî 0).

# <div class="alert alert-success">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ <a class="tocSkip"> </h2>
# 
# <b>–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ!üëç:</b> 
#     
# –í–∏–∂—É —Ç–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞. –ú–æ–ª–æ–¥–µ—Ü! –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Ä–∞—Å—Å—Ç–∞–≤–ª—è—Ç—å –∞–∫—Ü–µ–Ω—Ç—ã –≤ –≤—ã–≤–æ–¥–∞—Ö.

# <a id="id3"></a>
# ## –ò–∑—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö

# In[2]:


# —É—Å—Ç–∞–Ω–æ–≤–∏–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É
get_ipython().system('pip install skimpy')
# !pip install pandas-profiling


# In[3]:


#–∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
# –≤—ã–∑–æ–≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ pandas
import pandas as pd
# –∏–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ matplotlib
import matplotlib.pyplot as plt
from matplotlib import rcParams, rcParamsDefault
# –∏–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ numpy
import numpy as np
# –∏–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ seaborn
import seaborn as sns
# –∏–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ scipy
import scipy
from scipy import stats as st
# –∏–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ warnings
import warnings
warnings.filterwarnings('ignore') 

from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor
from sklearn.ensemble import RandomForestClassifier
from sklearn.linear_model import LogisticRegression 
from sklearn.model_selection import GridSearchCV

from sklearn.metrics import accuracy_score, mean_absolute_error
from sklearn.datasets import make_classification, make_regression

from sklearn.preprocessing import StandardScaler


# In[7]:


# –∑–∞–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ä–µ–¥—ã –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏

rcParams['figure.figsize'] = 10,4
get_ipython().run_line_magic('config', "InlineBackend.figure_format = 'svg'")

sns.set_style('darkgrid')
sns.set(font_scale=1)


# In[8]:


# —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
try:
    df = pd.read_csv(r'c:\\Users\\–Æ–∫–∏\\AnaliticData\\DS _yandex\\5_–æ–±—É—á–µ–Ω–∏–µ_—Å-—É—á–∏—Ç–µ–ª–µ–º\\users_behavior.csv') #, sep='\t')
except:
    df = pd.read_csv('https://code.s3.yandex.net/datasets/users_behavior.csv')


# In[9]:


df.head()


# In[10]:


#–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ skimpy
from skimpy import skim, clean_columns
#df = clean_columns(df)
skim(df)


# –í—ã–≤–æ–¥:  
# –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –¥–∞—Ç–∞—Ñ—Ä–µ–π–º —Å–æ–¥–µ—Ä–∂–∏—Ç 3214 –Ω–∞–±–ª—é–¥–µ–Ω–∏–π –∏ 5 –ø—Ä–∏–∑–Ω–∞–∫–æ–≤;  
# 4 –ø—Ä–∏–∑–Ω–∞–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ (—Ç–∏–ø–∞ "float") –∏ –æ–¥–∏–Ω –ø—Ä–∏–∑–Ω–∞–∫ **is_ultra** (–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞) –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–π;  
# –ø—Ä–∏–∑–Ω–∞–∫ **is_ultra** - —Ü–µ–ª–µ–≤–æ–π;  
# –≤—ã–±–æ—Ä–∫–∞ –Ω–µ —Å–æ–¥–µ—Ä–¥–∏—Ç –ø—Ä–æ–ø—É—Å–∫–æ–≤;  
# –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –∫–∞–∂—É—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏, –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É.

# <div class="alert alert-success">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ <a class="tocSkip"></a></h2>
# 
# <b>–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ!üëç:  </b> 
#     
# –° –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å, –ø—Ä–æ–≤–µ–¥–µ–Ω –ø–µ—Ä–≤–∏—á–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –æ—Å–º–æ—Ç—Ä!) –ü–æ–ª—É—á–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º —Å –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–æ–π –¥–∞–Ω–Ω—ã—Ö.
# </div>

# <div class="alert alert-warning">
#     <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ <a class="tocSkip"></a></h2>
#     
# <b>–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏üí°:</b> 
#     
# - –í –¥–∞–Ω–Ω—ã—Ö –µ—Å—Ç—å –º—É–ª—å—Ç–∏–∫–æ–ª–ª–∏–Ω–µ–∞—Ä–Ω–æ—Å—Ç—å –≤ —Ñ–∏—á–∞—Ö calls –∏ minutes. –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —ç—Ç–æ –º–µ—Ç–æ–¥–æ–º `corr()` –∏ —É–¥–∞–ª–∏—Ç—å –æ–¥–∏–Ω –∏–∑ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã. 
# - –†–µ–∫–æ–º–µ–Ω–¥—É—é —Ç–∞–∫–∂–µ —Ç–µ–±–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ç–æ–¥ `sns.pairplot` —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º `hue`, –≤ –∫–æ—Ç–æ—Ä—ã–π –º—ã –ø–µ—Ä–µ–¥–∞–µ–º —Ü–µ–ª–µ–≤–æ–π –ø—Ä–∏–∑–Ω–∞–∫.
# </div>
# 

# <br/>    
# <div class="alert alert-info">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞: <a class="tocSkip"> </h2>
# 
# <b>üëã:</b> "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞ v.1".  
#     –†–∞–Ω–µ–µ –Ω–µ –±—ã–ª–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–ª–∏—è–µ–Ω–∏–µ –Ω–∞ –ª–∏–Ω–µ–π–Ω—ã–µ –º–æ–¥–µ–ª–∏, –∞ –Ω–∞—à–∞ —Ä–∞–±–æ—Ç–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –Ω–µ–ª–∏–Ω–µ–π–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏ (–¥–µ—Ä–µ–≤—å—è–º–∏) - –ø—Ä–∏ –∫–æ—Ç–æ—Ä—ã—Ö –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è –Ω–µ –æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–ª–∏—è–µ–Ω–∏–µ –Ω–∞ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π - –ø–æ–ø—Ä–∞–≤—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –µ—Å–ª–∏ —è –Ω–µ –ø—Ä–∞–≤–∞.
# </div>

# <div class="alert alert-success">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ v.2 <a class="tocSkip"></a></h2>
# 
# <b>–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ!üëç:  </b> 
#     
# –õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è - —ç—Ç–æ –ª–∏–Ω–µ–π–Ω–∞—è –º–æ–¥–µ–ª—å. –í—ã—Å–æ–∫–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è (–º—É–ª—å—Ç–∏–∫–æ–ª–ª–µ–Ω–∏–∞—Ä–Ω–æ—Å—Ç—å) –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ –º–æ–¥–µ–ª–µ–π –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è: –Ω–∞–ª–∏—á–∏–µ ¬´–ª–∏—à–Ω–∏—Ö¬ª –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –≤–µ–¥—ë—Ç –∫ –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏—é –∏–ª–∏ –≤–æ–≤—Å–µ –ª–æ–º–∞–µ—Ç –º–æ–¥–µ–ª—å, –ø–æ–¥—Ä–æ–±–Ω–µ–µ:  <a href="https://ml-handbook.ru/chapters/linear_models/intro">—Å—Å—ã–ª–∫–∞</a>.
#     
# –°–æ–≥–ª–∞—Å–Ω–æ –∫–ª—é—á–µ–≤—ã–º –¥–æ–ø—É—â–µ–Ω–∏—è–º –¥–ª—è –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–æ–π —Ä–µ–≥—Ä–µ—Å—Å–∏–∏, –≤ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º—É–ª—å—Ç–∏–∫–æ–ª–ª–∏–Ω–µ–∞—Ä–Ω–æ—Å—Ç–∏, –∏–Ω–∞—á–µ —ç—Ç–æ –æ—Å–ª–∞–±–∏—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫—É—é –º–æ—â–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–º–æ—Ç—Ä–∏ –≤ —Å—Ç–∞—Ç—å–µ  -  <a href="https://towardsdatascience.com/assumptions-of-logistic-regression-clearly-explained-44d85a22b290">Kenneth Leung - Assumptions of Logistic Regression, Clearly Explained</a>.)
# 
# 
#     
# –ß—Ç–æ –º—ã –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å - —ç—Ç–æ –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –æ–¥–∏–Ω –∏–∑ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤, –∫–æ—Ä—Ä–µ–ª–∏—Ä—É—é—â–∏—Ö —Å –¥—Ä—É–≥–∏–º, –∏–ª–∏ –∂–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–¥–µ–ª–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ—Ä–æ–≤ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ –≥–ª–∞–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç (Principal Main Component).    
# 
# </div>

# In[11]:


# –í–æ—Å–ø–æ–ª—å–∑—É–µ–º—Å—è –ø–∞—Ä–Ω—ã–º–∏ –≥—Ä–∞—Ñ–∏–∫–∞–º–∏ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
sns.pairplot(df, hue='is_ultra')


# –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∏–ª—å–Ω—É—é –ª–∏–Ω–µ–π–Ω—É—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –º–µ–∂–¥—É –ø—Ä–∏–∑–Ω–∞–∫–∞–º–∏ **—Åalls** (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–æ–Ω–∫–æ–≤) –∏ **minutes** (—Å—É–º–º–∞—Ä–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–≤–æ–Ω–∫–æ–≤ –≤ –º–∏–Ω—É—Ç–∞—Ö).

# In[12]:


# –†–∞—Å–º–º–æ—Ç—Ä–∏–º –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –º–µ–∂–¥—É –ø—Ä–∏–∑–Ω–∞–∫–∞–º–∏:
df.corr()


# –¢–∞–∫ –∫–∞–∫ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è –º–µ–∂–¥—É –ø—Ä–∏–∑–Ω–∞–∫–∞–º–∏ —Åalls (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–æ–Ω–∫–æ–≤) –∏ minutes —Ä–∞–≤–Ω–∞ 0,98, —Ç–æ —Å —Ü–µ–ª—å—é –∏—Å–∫–ª—é—á–µ–Ω–∏—è –≤–ª–∏—è–Ω–∏—è –Ω–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π –≤ –º–æ–¥–µ–ª—è—Ö –∏–∑–±–∞–≤–∏–º—Å—è –æ—Ç –æ–¥–Ω–æ–≥–æ –∏–∑ –∫–æ—Ä—Ä–µ–ª–∏—Ä—É—é—â–∏—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤:

# In[13]:


df = df.drop('calls', axis=1)

df.head(5)


# <a id="id4"></a>
# ## –†–∞–∑–æ–±—å–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ –≤—ã–±–æ—Ä–∫–∏

# In[14]:


# –≤—ã–¥–µ–ª–∏–º –∏–∑ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ —Ñ–∏—á–∏
x = df.drop('is_ultra',axis=1)
columns_name = x.columns.tolist()
x.sample(5)


# In[15]:


# –≤—ã–¥–µ–ª–∏–º –∏—Å–∫–æ–º—ã–π/—Ü–µ–ª–µ–≤–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä
y=df.is_ultra
y.sample(5)


# In[16]:


# –≤—ã–¥–µ–ª–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—É—é –≤—ã–±–æ—Ä–∫—É:
train_x, valid_test_x, train_y, valid_test_y = train_test_split(
    x, y, test_size=0.4, random_state=123, shuffle = True, stratify=y)


# In[17]:


print('–†–∞–∑–º–µ—Ä —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–π –≤—ã–±–æ—Ä–∫–∏ - {} –æ–±—ä–µ–∫—Ç–æ–≤'.format(train_x.shape[0]))


# In[18]:


# –≤—ã–¥–µ–ª–∏–º –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω—É—é –∏ —Ç–µ—Å—Ç–æ–≤—É—é –≤—ã–±–æ—Ä–∫–∏:
valid_x, test_x, valid_y, test_y = train_test_split(
    valid_test_x, valid_test_y, test_size=0.5, random_state=123,stratify=valid_test_y)


# In[19]:


print('–†–∞–∑–º–µ—Ä –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ–π –≤—ã–±–æ—Ä–∫–∏ - {} –æ–±—ä–µ–∫—Ç–æ–≤'.format(valid_x.shape[0]))
print('–†–∞–∑–º–µ—Ä —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–∏ - {} –æ–±—ä–µ–∫—Ç–æ–≤'.format(test_x.shape[0]))


# In[20]:


# –≤—ã–¥–µ–ª–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—É—é –∏ —Ç–µ—Å—Ç–æ–≤—É—é –≤—ã–±–æ—Ä–∫–∏ –¥–ª—è –ö—Ä–æ—Å—Å–≤–∞–ª–∏–¥–∞—Ü–∏–∏:
trainCV_x = pd.concat([train_x, valid_x],ignore_index=True)
trainCV_y = pd.concat([train_y, valid_y],ignore_index=True)

print('–†–∞–∑–º–µ—Ä —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–π –≤—ã–±–æ—Ä–∫–∏ - {} –æ–±—ä–µ–∫—Ç–æ–≤'.format(trainCV_x.shape[0]))


# <div class="alert alert-success">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ <a class="tocSkip"></a></h2>
# 
# <b>–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ!üëç:</b> 
#     
# –° —Ä–∞–∑–±–∏–µ–Ω–∏–µ–º –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ, –∞ —Ä–∞–∑–º–µ—Ä—ã –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –Ω–∞–±–æ—Ä–æ–≤ –Ω–∞–ø–µ—á–∞—Ç–∞–Ω—ã)

# <a id="id5"></a>
# ## –ò—Å—Å–ª–µ–¥—É–µ–º –º–æ–¥–µ–ª–∏

# **1. –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –º–æ–¥–µ–ª—å –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ —Ä–µ—à–∞—é—â–µ–≥–æ –¥–µ—Ä–µ–≤–∞:**

# In[21]:


# —Å–æ–∑–¥–∞–¥–∏–º —Å–ø–∏—Å–∫–∏ accuracy –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ –≤—ã–±–æ—Ä–æ–∫
train_scores = []
valid_scores = []

best_max_depth = 1
best_accuracy = 0

for n in range(1, 20):
    model = DecisionTreeClassifier(max_depth=n, random_state=123)
    model.fit(train_x, train_y)
    train_preds = model.predict(train_x)
    valid_preds = model.predict(valid_x)
    
    train_scores.append(accuracy_score(train_y, train_preds))
    valid_scores.append(accuracy_score(valid_y, valid_preds))
    
    if accuracy_score(valid_y, valid_preds) > best_accuracy:
        best_accuracy = accuracy_score(valid_y, valid_preds)
        best_max_depth = n
        
print(f'–õ—É—á—à–∞—è –≥–ª—É–±–∏–Ω–∞ –¥–µ—Ä–µ–≤–∞: {best_max_depth}')
print(f'–õ—É—á—à–∞—è –º–µ—Ç—Ä–∏–∫–∞: {best_accuracy}')


# –í–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:

# In[22]:


sns.lineplot(x=list(range(1, 20)), y=train_scores, color='g')
sns.lineplot(x=list(range(1, 20)), y=valid_scores, color='r')
plt.xticks(list(range(1, 20)))
plt.legend(['train_scores', 'valid_scores'], loc='upper left')
plt.show()


# **–í—ã–≤–æ–¥:** –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã - –ª—É—á—à–∞—è –≥–ª—É–±–∏–Ω–∞ –¥–µ—Ä–µ–≤–∞ = 8, —Ç–∞–∫ –∫–∞–∫ –¥–∞–ª–µ–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ–π –≤—ã–±–æ—Ä–∫–µ –ø–∞–¥–∞—é—Ç.

# <div class="alert alert-success">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞  <a class="tocSkip"> </h2>
# 
# <b>–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ!üëç:</b> –í–∏–∂—É, —Ö–æ—Ä–æ—à–æ.

# **–û–ø—Ä–µ–¥–µ–ª–∏–º –≤–∞–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–∑–Ω–∞–∫–æ–≤:**

# In[23]:


model.feature_importances_


# In[24]:


fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(6, 4))
sns.barplot(y=columns_name, x=model.feature_importances_, orient='h')
plt.tight_layout
plt.show()


# <div class="alert alert-success">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ <a class="tocSkip"> </h2>
# 
# <b>–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ!üëç:</b> 
#     
# –ú–æ–ª–æ–¥–µ—Ü, —á—Ç–æ –Ω–µ –∑–∞–±—ã–≤–∞–µ—à—å –æ—Ü–µ–Ω–∏—Ç—å –≤–∞–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –º–æ–¥–µ–ª–∏. 

# In[25]:


# –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª—å –¥–ª—è –≥–ª—É–±–∏–Ω—ã –¥–µ—Ä–µ–≤–∞ = 3
model = DecisionTreeClassifier(max_depth=3, random_state=42)
model.fit(train_x, train_y)

from sklearn.tree import plot_tree
fn = columns_name
cn = ['–£–ª—å—Ç—Ä–∞','–°–º–∞—Ä—Ç']
fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(10, 8))
plot_tree(model, feature_names=fn, class_names=cn, filled=True)
plt.show()


# ___–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –∫—Ä–æ—Å—Å–≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–ª—è –¥–µ—Ä–µ–≤–∞ —Ä–µ—à–µ–Ω–∏–π:___

# In[26]:


model = DecisionTreeClassifier(random_state=123)
params = {'max_depth':range(1,20)}
grid_model = GridSearchCV(model, params, cv=5, scoring='accuracy', n_jobs=-1)
grid_model.fit(trainCV_x , trainCV_y)
print(f'–õ—É—á—à–∞—è –º–æ–¥–µ–ª—å –¥–µ—Ä–µ–≤–∞: {grid_model.best_estimator_}')
print(f'–õ—É—á—à–∞—è –≥–ª—É–±–∏–Ω–∞ –¥–µ—Ä–µ–≤–∞: {grid_model.best_params_}')
print(f'–õ—É—á—à–∞—è –º–µ—Ç—Ä–∏–∫–∞: {grid_model.best_score_}')


# <br/>
# <div class="alert alert-block alert-danger">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ <a class="tocSkip"></h2>
#     
# <b>–ù–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—Éü§î:</b>
#     
# - –¢—É—Ç –Ω–µ —Å–ª–µ–¥—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω—É—é –≤—ã–±–æ—Ä–∫—É. –ü—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞—Ç—Ä–∏–±—É—Ç `.best_score_`. 
#     
# - –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –∫—Ä–æ—Å—Å-–≤–∞–ª–∏–¥–∞—Ü–∏—é, —Ç–æ –ø–æ–¥–∞–≤–∞—Ç—å –≥—Ä–∏–¥—Å–µ—Ä—á—É –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ —Å–ª–µ–¥—É–µ—Ç –≤—ã–±–æ—Ä–∫—É, –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—É—é –∏–∑ train –∏ validation –≤—ã–±–æ—Ä–æ–∫.   
#  </div>

# <br/>    
# <div class="alert alert-info">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞: <a class="tocSkip"> </h2>
# 
# <b>üëã:</b> "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞ v.1".  
#     –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–∞—è –≤—ã–±–æ—Ä–∫–∞ –∏–∑ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–π –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ–π (—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ 4), –¥–ª—è –≤—ã–≤–æ–¥–∞ –ª—É—á—à–µ–π –º–µ—Ç—Ä–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä - best_score_
# </div>

# <div class="alert alert-success">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ v.2 <a class="tocSkip"> </h2>
# 
# <b>–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ!üëç:</b> –í–∏–∂—É, —Ö–æ—Ä–æ—à–æ.

# **2. –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –º–æ–¥–µ–ª—å –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –Ω–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–µ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å** 

# In[23]:


# –ø–æ—Å—Ç—Ä–æ–∏–º –º–æ–¥–µ–ª—å —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
model = RandomForestClassifier(random_state=123) 
model.fit(train_x, train_y)
rez = model.score(valid_x,valid_y)
print(rez)


# In[24]:


# –ø–æ–¥–±–∏—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ—Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º –º–æ–¥–µ–ª–∏:
train_scores = []
valid_scores = []

best_model = None
best_result = 0
best_max_depth = 0
best_n_estimators = 0

for i in range(10, 100,10):
    train_scores_max_depth = []
    valid_scores_max_depth = []
    for k in range (1,20):
        model = RandomForestClassifier(random_state=123, n_estimators=i, max_depth=k)  
        model.fit(train_x, train_y)
        train_scores_max_depth.append(model.score(train_x,train_y))
        valid_scores_max_depth.append(model.score(valid_x,valid_y))
        result = model.score(valid_x,valid_y)
        if result > best_result:
            best_model = model
            best_result = result
            best_n_estimators = i
            best_max_depth = k
   
    train_scores.append(max(train_scores_max_depth))
    valid_scores.append(max(valid_scores_max_depth))
       
    
print(f'–õ—É—á—à–∞—è –º–æ–¥–µ–ª—å: {best_model}')
print(f'–õ—É—á—à–∞—è –º–µ—Ç—Ä–∏–∫–∞: {best_result}')
print(f'–õ—É—á—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ä–µ–≤—å–µ–≤: {best_n_estimators}')
print(f'–õ—É—á—à–∞—è –≥–ª—É–±–∏–Ω–∞ –¥–µ—Ä–µ–≤–∞: {best_max_depth}')


# In[25]:


sns.lineplot(x=list(range(10, 100,10)), y=train_scores, color='g')
sns.lineplot(x=list(range(10, 100,10)), y=valid_scores, color='r')
plt.xticks(list(range(10, 100,10)))
plt.legend(['train_scores', 'valid_scores'], loc='center left')
plt.show()


# –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ –º–æ–¥–µ–ª—å –¥–∞–µ—Ç –æ—Ç–ª–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç 0,97 –¥–æ 0,99, –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ–π –≤—ã–±–æ—Ä–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ö—É–∂–µ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∫–∞–∫ –±—ã–ª–æ —Å–∫–∞–∑–∞–Ω–æ –≤—ã—à–µ, –¥–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –¥–µ—Ä–µ–≤—å–µ–≤ = 20
# 
# 

# ___–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –∫—Ä–æ—Å—Å–≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ª–µ—Å–∞:___

# In[26]:


model = RandomForestClassifier(random_state=123)
params = {'max_depth':range(1,20), 'n_estimators':range(10,100,10)}
grid_model = GridSearchCV(model, params, cv=3, scoring='accuracy', verbose=1)
grid_model.fit(trainCV_x , trainCV_y)
print(f'–õ—É—á—à–∞—è –º–æ–¥–µ–ª—å: {grid_model.best_estimator_}')
print(f'–õ—É—á—à–∞—è –º–µ—Ç—Ä–∏–∫–∞: {grid_model.best_score_}')
print(f'–õ—É—á—à–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {grid_model.best_params_}')


# **3. –õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è**

# In[27]:


# –ø–æ—Å—Ç—Ä–æ–∏–º –º–æ–¥–µ–ª—å —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
model = LogisticRegression(random_state=123, solver='lbfgs', max_iter=1000) 
model.fit(train_x, train_y)
model.score(valid_x, valid_y) 


# In[28]:


# –ø–æ–¥–±–∏—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ—Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º –º–æ–¥–µ–ª–∏:
train_scores = []
valid_scores = []

best_model = None
max_iter = 1
best_accuracy = 0

for n in [20, 50, 100, 200, 500, 1000]:
    model = LogisticRegression(random_state=123, solver='lbfgs', max_iter=n)
    model.fit(train_x, train_y)
        
    train_scores.append(model.score(train_x, train_y))
    valid_scores.append(model.score(valid_x, valid_y))
    
    if model.score(valid_x, valid_y) > best_accuracy:
        best_accuracy = model.score(valid_x, valid_y)
        max_iter = n
        best_model = model
        
print(f'–õ—É—á—à–∞—è –º–æ–¥–µ–ª—å: {best_model}')
print(f'–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è —Å—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ä–µ—à–∞—Ç–µ–ª–µ–π: {max_iter}')
print(f'–õ—É—á—à–∞—è –º–µ—Ç—Ä–∏–∫–∞: {best_accuracy}')


# <div class="alert alert-warning">
#     <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞  <a class="tocSkip"> </h2>
#     
# <b>–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏üí°:</b> 
# 
#     
# –õ—É—á—à–∞—è –º–æ–¥–µ–ª—å —É —Ç–µ–±—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∞—Å—å
# </div>

# <br/>    
# <div class="alert alert-info">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞: <a class="tocSkip"> </h2>
# 
# <b>üëã:</b> "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞ v.1".  
#     –∫–æ—Ä—Ä–µ–∫—Ç–µ—Ä–∏–≤–∫–∏ –≤–Ω–µ—Å–µ–Ω—ã - –õ—É—á—à–∞—è –º–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è
# </div>

# <div class="alert alert-success">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ v.2 <a class="tocSkip"> </h2>
# 
# <b>–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ!üëç:</b> –í–∏–∂—É, —Ö–æ—Ä–æ—à–æ.

# ___–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –∫—Ä–æ—Å—Å–≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–ª—è –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏–∏:___

# In[29]:


param_grid_lr = {'max_iter': [20, 50, 100, 200, 500, 1000],                      
    'solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga'],   
    'class_weight': ['balanced']}

logModel_grid = GridSearchCV(estimator=LogisticRegression(random_state=123), 
    param_grid=param_grid_lr,scoring='accuracy', verbose=1, cv=10, n_jobs=-1)
logModel_grid.fit(trainCV_x , trainCV_y)

print(f'–õ—É—á—à–∞—è –º–æ–¥–µ–ª—å: {logModel_grid.best_estimator_}')
print(f'–õ—É—á—à–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {logModel_grid.best_params_}')
print(f'–õ—É—á—à–∞—è –º–µ—Ç—Ä–∏–∫–∞: {logModel_grid.best_score_}')


# <div class="alert alert-block alert-danger">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ <a class="tocSkip"></h2>
# 
# <b>–ù–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—Éü§î:</b>
# 
# –í –∞—Ä–≥—É–º–µ–Ω—Ç–µ  GridSearchCV —Å–ª–µ–¥—É–µ—Ç —É–∫–∞–∑–∞—Ç—å `scoring='accuracy'`
# </div>

# <br/>    
# <div class="alert alert-info">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞: <a class="tocSkip"> </h2>
# 
# <b>üëã:</b> "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞ v.1".  
#     –∫–æ—Ä—Ä–µ–∫—Ç–µ—Ä–∏–≤–∫–∏ –≤–Ω–µ—Å–µ–Ω—ã 
# </div>

# <div class="alert alert-success">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ v.2 <a class="tocSkip"> </h2>
# 
# <b>–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ!üëç:</b> –í–∏–∂—É, —Ö–æ—Ä–æ—à–æ.

# **–í—ã–≤–æ–¥:**  
# –ò—Å—Ö–æ–¥—è –∏–∑ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, –ª—É—á—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∫–∞–∑–∞–ª–∞ –º–æ–¥–µ–ª—å "—Ä–µ—à–∞—é—â–µ–µ –¥–µ—Ä–µ–≤–æ", –±–ª–∞–≥–æ–¥–∞—Ä—è –ø–æ–¥–±–æ—Ä—É –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∏–ª—É—á—à—É—é –º–µ—Ç—Ä–∏–∫—É: 0.807153965785381, —Å –Ω–µ–±–æ–ª—å—à–∏–º –æ—Ç—Ä—ã–≤–æ–º –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞–±–æ—Ç—ã —Å–ª–µ–¥—É–µ—Ç –º–æ–¥–µ–ª—å "—Å–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å"(–ª—É—á—à–∞—è –º–µ—Ç—Ä–∏–∫–∞: 0.8040435458786936).  

# <div class="alert alert-success">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ <a class="tocSkip"></a></h2>
# 
# <b>–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ!üëç:</b>
# 
# –í –æ—Å—Ç–∞–ª—å–Ω–æ–º, –º–æ–¥–µ–ª–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ:
#     
#  - –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–æ –±–æ–ª–µ–µ 5 –∑–Ω–∞—á–µ–Ω–∏–π –≥–∏–ø–µ—Ä–ø–∞—Ä–∞–º–µ—Ç—Ä–∞
#  - –º–æ–¥–µ–ª–∏ –æ–±—É—á–µ–Ω—ã –Ω–∞ –æ–±—É—á–∞—é—â–µ–º –Ω–∞–±–æ—Ä–µ
#  - –ø–æ–ª—É—á–µ–Ω–∞ –æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ–º –Ω–∞–±–æ—Ä–µ
#  - –ø–µ—Ä–µ–±–æ—Ä –≥–∏–ø–µ—Ä–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ —Ü–∏–∫–ª–µ
#  - –µ—Å—Ç—å –≤—ã–≤–æ–¥—ã   
# </div>

# <a id="id6"></a>
# ## –ü—Ä–æ–≤–µ—Ä–∏–º –º–æ–¥–µ–ª—å –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ

# –ü—Ä–æ–∏–∑–≤–µ–¥–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–∞–±–æ—Ç—ã –º–æ–¥–µ–ª–∏ "—Ä–µ—à–∞—é—â–µ–µ –¥–µ—Ä–µ–≤–æ" –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ:

# In[30]:


model = DecisionTreeClassifier(max_depth=8, random_state=123)
model.fit(train_x, train_y)
preds = model.predict(test_x)
accuracy = accuracy_score(test_y, preds)

print(f'–º–µ—Ç—Ä–∏–∫–∞ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ: {accuracy}')


# –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –ø–æ–ª—É—á–µ–Ω–∞ –ø—Ä–∏–µ–º–ª–µ–º–∞—è –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞ –º–µ—Ç—Ä–∏–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã –º–æ–¥–µ–ª–∏ - —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∏—á—å accuracy –Ω–µ –º–µ–Ω—å—à–µ 0.75.   
# –°—á–∏—Ç–∞–µ–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω—ã–º.

# <div class="alert alert-success">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ <a class="tocSkip"> </h2>
# 
# <b>–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ!üëç:</b> 
#     
# –ù–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ –ø–æ–ª—É—á–µ–Ω–æ —Ö–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ)

# <a id="id7"></a>
# ## (–±–æ–Ω—É—Å) –ü—Ä–æ–≤–µ—Ä–µ–º –º–æ–¥–µ–ª–∏ –Ω–∞ –∞–¥–µ–∫–≤–∞—Ç–Ω–æ—Å—Ç—å

# –í–æ—Å–ø–æ–ª—å–∑—É–µ–º—Å—è –≥–æ—Ç–æ–≤—ã–º –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º –¥–ª—è –æ–±—É—á–µ–Ω–∏—è baseline –º–æ–¥–µ–ª–∏, –∫–∞–∫ –ø—Ä–æ—Å—Ç–æ–π –±–∞–∑–æ–≤–æ–π –ª–∏–Ω–∏–µ–π –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥—Ä—É–≥–∏–º, —Ä–∞–Ω–µ–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–º–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º–∏

# In[31]:


from sklearn.dummy import DummyClassifier
dummy_clf = DummyClassifier(strategy="most_frequent", random_state=0)
dummy_clf.fit(train_x, train_y)
dummy_clf.score(valid_x,valid_y)


# **–í—ã–≤–æ–¥:** –∑–Ω–∞—á–µ–Ω–∏—è accuracy —É —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –≤—ã—à–µ –º–æ–¥–µ–ª–µ–π –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ª—É—á—à–µ.

# <div class="alert alert-success">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ <a class="tocSkip"> </h2>
# 
# <b>–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ!üëç:</b> 
#     
# –ú–æ–ª–æ–¥–µ—Ü, —á—Ç–æ –ø—Ä–æ–≤–æ–¥–∏—à—å —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–≤–æ–µ–π –º–æ–¥–µ–ª–∏ —Å –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω–æ–π –¥–∞–º–º–∏ –º–æ–¥–µ–ª—å—é. –í –∫–∞–∂–¥–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ø—Ä–∏ –æ—Ü–µ–Ω–∫–µ –∫–∞—á–µ—Å—Ç–≤–∞ –º–æ–¥–µ–ª–∏, –∏–º–µ–µ—Ç —Å–º—ã—Å–ª –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Ç–∞–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –∞–¥–µ–∫–≤–∞—Ç–Ω–æ—Å—Ç—å. –ü–æ–¥—Ä–æ–±–Ω–µ–µ –º–æ–∂–µ—à—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –≤ —Å—Ç–∞—Ç—å–µ: https://progler.ru/blog/ml-klassifikatory-pustyshki-s-ispolzovaniem-sklearn

# <div style="border:solid Chocolate 2px; padding: 40px">
# 
# 
# <h2> –ò—Ç–æ–≥–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ v.1 <a class="tocSkip"> </h2>    
#     
#   
# –£ –º–µ–Ω—è —Å–ª–æ–∂–∏–ª–æ—Å—å —Ö–æ—Ä–æ—à–µ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–µ–∫—Ç–µ. –ú–æ–ª–æ–¥–µ—Ü! –ò–∑—É—á–µ–Ω—ã –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–æ–¥–µ–ª–µ–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –æ—Ü–µ–Ω–µ–Ω–æ –∏—Ö –∫–∞—á–µ—Å—Ç–≤–æ. –û—Å–º—ã—Å–ª–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –¥–µ–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ - –º–Ω–æ–≥–æ–µ —É–¥–∞–ª–æ—Å—å –∫–∞–∫ –Ω–∞–¥–æ)
#     
# –û—Ç–º–µ—á—É –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞üôÇ:
#     
# - —Ç–µ–±–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∏—Ç—å—Å—è –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é!  
# - –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏ –º–æ–¥–µ–ª–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–∞—è –≤—ã–±–æ—Ä–∫–∞ –∏ –ø–æ–¥–±–æ—Ä –≥–∏–ø–µ—Ä–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.    
#     
# –ï—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–æ–º–µ–Ω—Ç–æ–≤ –≤—Å–µ–≥–æ, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–æ–∏—Ç –µ—â—ë —Ä–∞–∑ –≤–∑–≥–ª—è–Ω—É—Ç—å, —è —É–∫–∞–∑–∞–ª –∏—Ö –≤ –º–æ–∏—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –ø–æ —Ö–æ–¥—É –ø—Ä–æ–µ–∫—Ç–∞ - –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ. –ü—Ä–µ–¥–ª–∞–≥–∞—é —Ç–µ–±–µ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –ø–æ –º–æ–∏–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º, —á—Ç–æ–±—ã –¥–æ–≤–µ—Å—Ç–∏ –µ–≥–æ –¥–æ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–∞.
# 
#     
# –ï—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞–π—Å—è, —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –Ω–∞ –Ω–∏—Ö –æ—Ç–≤–µ—á—É.  
# </div>

# <div style="border:solid Chocolate 2px; padding: 40px">
# 
# 
# <h2> –ò—Ç–æ–≥–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é–µ—Ä–∞ v.2 <a class="tocSkip"> </h2>    
#     
#      
#   
# –¢–µ–ø–µ—Ä—å –ø–æ—á—Ç–∏ –∏–¥–µ–∞–ª—å–Ω–æ, –º–æ–ª–æ–¥–µ—Ü! –ü—Ä–∏–Ω–∏–º–∞—é —Ç–≤–æ–π –ø—Ä–æ–µ–∫—Ç)
#     
# –ú–æ–≥—É –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞—Ç—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ—Ä–∞–∑–±–æ—Ä <a href="https://www.youtube.com/watch?v=YTLDATQLK6w">–ö–∞–∫ –æ–±—É—á–∏—Ç—å –º–æ–¥–µ–ª—å –ø–æ —à–∞–≥–∞–º –≤ Data Science?</a>
#     
# –†–µ–∫–æ–º–µ–Ω–¥—É—é —Ç–µ–±–µ —Å—Ç–∞—Ç—å–∏ –ø–æ `GridSearchCV` : https://vc.ru/ml/147132-kak-avtomaticheski-podobrat-parametry-dlya-modeli-mashinnogo-obucheniya-ispolzuem-gridsearchcv
#         
# https://newtechaudit.ru/gridsearchcv-pomoshhnik-v-vybore/        
#     
#     
# –í —ç—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–µ –≤—Å–µ —à–∞–≥–∏ –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω—ã. –° –∏–Ω—Ç–µ—Ä–µ—Å–æ–º —á–∏—Ç–∞–ª —Ç–≤–æ–∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è, –∫–æ–¥ –∏ –≤—ã–≤–æ–¥—ã. –¶–µ–ª—å –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞. –†–∞–¥ –±—ã–ª —Ç–µ–±–µ –ø–æ–º–æ—á—å)
#     
# –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –≤ Slack –±—É–¥–µ—Ç —Ä–∞–¥ –ø–æ–º–æ—á—å, –µ—Å–ª–∏ —É —Ç–µ–±—è –ø–æ—è–≤—è—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã.
#   
# </div>

# <a id="id8"></a>
# ## –ß–µ–∫-–ª–∏—Å—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞

# –ü–æ—Å—Ç–∞–≤—å—Ç–µ 'x' –≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞—Ö. –î–∞–ª–µ–µ –Ω–∞–∂–º–∏—Ç–µ Shift+Enter.

# - [x] Jupyter Notebook –æ—Ç–∫—Ä—ã—Ç
# - [x] –í–µ—Å—å –∫–æ–¥ –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫
# - [x] –Ø—á–µ–π–∫–∏ —Å –∫–æ–¥–æ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ –ø–æ—Ä—è–¥–∫–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è
# - [x] –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–µ 1: –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –∏–∑—É—á–µ–Ω—ã
# - [x] –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–µ 2: –¥–∞–Ω–Ω—ã–µ —Ä–∞–∑–±–∏—Ç—ã –Ω–∞ —Ç—Ä–∏ –≤—ã–±–æ—Ä–∫–∏
# - [x] –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–µ 3: –ø—Ä–æ–≤–µ–¥–µ–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π
#     - [x] –†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π –º–æ–¥–µ–ª–∏
#     - [x] –†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ —Ö–æ—Ç—è –±—ã 3 –∑–Ω–∞—á–µ–Ω–∏—è –≥–∏–ø–µ–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å –º–æ–¥–µ–ª–∏
#     - [x] –ù–∞–ø–∏—Å–∞–Ω—ã –≤—ã–≤–æ–¥—ã –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
# - [x] –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–µ 3: –ü—Ä–æ–≤–µ–¥–µ–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
# - [x] –£–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∏—á—å accuracy –Ω–µ –º–µ–Ω—å—à–µ 0.75
# 

# In[ ]:




